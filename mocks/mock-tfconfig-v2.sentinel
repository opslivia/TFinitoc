import "strings"

providers = {
	"azurerm": {
		"alias": "",
		"config": {
			"features": [
				{},
			],
		},
		"module_address":      "",
		"name":                "azurerm",
		"provider_config_key": "azurerm",
		"version_constraint":  "~> 2.65",
	},
}

resources = {
	"azurerm_network_interface.main": {
		"address": "azurerm_network_interface.main",
		"config": {
			"ip_configuration": [
				{
					"name": {
						"constant_value": "testconfiguration1",
					},
					"private_ip_address_allocation": {
						"constant_value": "Dynamic",
					},
					"subnet_id": {
						"references": [
							"azurerm_subnet.internal.id",
							"azurerm_subnet.internal",
						],
					},
				},
			],
			"location": {
				"references": [
					"azurerm_resource_group.main.location",
					"azurerm_resource_group.main",
				],
			},
			"name": {
				"references": [
					"var.prefix",
				],
			},
			"resource_group_name": {
				"references": [
					"azurerm_resource_group.main.name",
					"azurerm_resource_group.main",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "main",
		"provider_config_key": "azurerm",
		"provisioners":        [],
		"type":                "azurerm_network_interface",
	},
	"azurerm_resource_group.main": {
		"address": "azurerm_resource_group.main",
		"config": {
			"location": {
				"constant_value": "westus2",
			},
			"name": {
				"references": [
					"var.prefix",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "main",
		"provider_config_key": "azurerm",
		"provisioners":        [],
		"type":                "azurerm_resource_group",
	},
	"azurerm_subnet.internal": {
		"address": "azurerm_subnet.internal",
		"config": {
			"address_prefixes": {
				"constant_value": [
					"10.0.2.0/24",
				],
			},
			"name": {
				"constant_value": "internal",
			},
			"resource_group_name": {
				"references": [
					"azurerm_resource_group.main.name",
					"azurerm_resource_group.main",
				],
			},
			"virtual_network_name": {
				"references": [
					"azurerm_virtual_network.main.name",
					"azurerm_virtual_network.main",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "internal",
		"provider_config_key": "azurerm",
		"provisioners":        [],
		"type":                "azurerm_subnet",
	},
	"azurerm_virtual_machine.main": {
		"address": "azurerm_virtual_machine.main",
		"config": {
			"delete_data_disks_on_termination": {
				"constant_value": true,
			},
			"delete_os_disk_on_termination": {
				"constant_value": true,
			},
			"location": {
				"references": [
					"azurerm_resource_group.main.location",
					"azurerm_resource_group.main",
				],
			},
			"name": {
				"references": [
					"var.prefix",
				],
			},
			"network_interface_ids": {
				"references": [
					"azurerm_network_interface.main.id",
					"azurerm_network_interface.main",
				],
			},
			"os_profile": [
				{
					"admin_password": {
						"constant_value": "0c@dm!n",
					},
					"admin_username": {
						"constant_value": "ocadmin",
					},
					"computer_name": {
						"constant_value": "hostname",
					},
				},
			],
			"os_profile_linux_config": [
				{
					"disable_password_authentication": {
						"constant_value": false,
					},
				},
			],
			"resource_group_name": {
				"references": [
					"azurerm_resource_group.main.name",
					"azurerm_resource_group.main",
				],
			},
			"storage_image_reference": [
				{
					"offer": {
						"constant_value": "UbuntuServer",
					},
					"publisher": {
						"constant_value": "Canonical",
					},
					"sku": {
						"constant_value": "16.04-LTS",
					},
					"version": {
						"constant_value": "latest",
					},
				},
			],
			"storage_os_disk": [
				{
					"caching": {
						"constant_value": "ReadWrite",
					},
					"create_option": {
						"constant_value": "FromImage",
					},
					"managed_disk_type": {
						"constant_value": "Standard_LRS",
					},
					"name": {
						"constant_value": "myosdisk1",
					},
				},
			],
			"vm_size": {
				"constant_value": "Standard_DS1_v2",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "main",
		"provider_config_key": "azurerm",
		"provisioners":        [],
		"type":                "azurerm_virtual_machine",
	},
	"azurerm_virtual_network.main": {
		"address": "azurerm_virtual_network.main",
		"config": {
			"address_space": {
				"constant_value": [
					"10.0.0.0/16",
				],
			},
			"location": {
				"references": [
					"azurerm_resource_group.main.location",
					"azurerm_resource_group.main",
				],
			},
			"name": {
				"references": [
					"var.prefix",
				],
			},
			"resource_group_name": {
				"references": [
					"azurerm_resource_group.main.name",
					"azurerm_resource_group.main",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "main",
		"provider_config_key": "azurerm",
		"provisioners":        [],
		"type":                "azurerm_virtual_network",
	},
}

provisioners = {}

variables = {
	"prefix": {
		"default":        "initoc",
		"description":    "",
		"module_address": "",
		"name":           "prefix",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
